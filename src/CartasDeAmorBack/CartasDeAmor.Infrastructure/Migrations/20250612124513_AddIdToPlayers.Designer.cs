// <auto-generated />
using System;
using CartasDeAmor.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CartasDeAmor.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250612124513_AddIdToPlayers")]
    partial class AddIdToPlayers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CartasDeAmor.Domain.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.PrimitiveCollection<int[]>("CardsDeck")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CurrentPlayerIndex")
                        .HasColumnType("integer");

                    b.Property<bool>("GameStarted")
                        .HasColumnType("boolean");

                    b.Property<string>("HostEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("ReservedCard")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("HostEmail");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("CartasDeAmor.Domain.Entities.Player", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserEmail")
                        .HasColumnType("text");

                    b.PrimitiveCollection<int[]>("HoldingCards")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<int[]>("PlayedCards")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<bool>("Protected")
                        .HasColumnType("boolean");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("GameId", "UserEmail");

                    b.HasIndex("UserEmail");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("CartasDeAmor.Domain.Entities.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Email");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CartasDeAmor.Domain.Entities.Game", b =>
                {
                    b.HasOne("CartasDeAmor.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("HostEmail")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("CartasDeAmor.Domain.Entities.Player", b =>
                {
                    b.HasOne("CartasDeAmor.Domain.Entities.Game", null)
                        .WithMany("Players")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CartasDeAmor.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CartasDeAmor.Domain.Entities.Game", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
