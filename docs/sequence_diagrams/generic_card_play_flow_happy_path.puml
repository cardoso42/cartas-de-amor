@startuml Generic Card Play Flow - Happy Path

actor "Active Player" as Player
participant "Frontend" as FE
participant "Backend (SignalR Hub)" as API
database "Database" as DB

Player -> FE: Request card requirements for CardType
activate FE
FE -> API: SignalR: GetCardRequirements(roomId, cardType)
activate API
API --> FE: SignalR: CardRequirements event
deactivate API
FE --> Player: Display card requirements
deactivate FE

Player -> FE: Play card with required parameters
activate FE
FE -> API: SignalR: PlayCard(roomId, cardPlayDto)
activate API

API -> DB: Retrieve game state
activate DB
DB --> API: Game state data
deactivate DB

API -> API: Validate turn and card
API -> API: Process card effect

API -> DB: Update game state
activate DB
DB --> API: State updated
deactivate DB

API --> FE: SignalR: CardResult-{resultType} event
API --> FE: SignalR: PrivatePlayerUpdate event

API -> DB: Check if round is over
activate DB
DB --> API: Round not over
deactivate DB

API -> DB: Advance to next player
activate DB
DB --> API: State updated with next player
deactivate DB

API -> DB: Update game state to WaitingForDraw
activate DB
DB --> API: State updated
deactivate DB

API --> FE: SignalR: NextTurn event

deactivate API

FE --> Player: Card played successfully

deactivate FE

@enduml
